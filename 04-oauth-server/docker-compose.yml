version: "3.8"
services:
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "8000:80"
    volumes:
      - ./frontend/dist:/srv/www/static
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - nodejs
      - mysql
      - pg
  nodejs:
    image: node:alpine
    networks:
      - mynetwork
    environment:
      NODE_ENV: production
    working_dir: /home/app
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./node-app:/home/app
    depends_on:
      - php
      - keycloak
    command: ["npm", "run", "start:dev"]
  php:
    image: webdevops/php-apache-dev:8.2
    volumes:
      - ./php-app:/app
    environment:
      WEB_DOCUMENT_ROOT: /app/public
  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: laravel
      MYSQL_USER: mysqluser
      MYSQL_PASSWORD: password
    ports:
      - "3309:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    restart: always
  pg:
    image: postgres:13-alpine
    networks:
      - mynetwork
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: password
      POSTGRES_DATABASE: keycloak
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - pg-data-01:/var/lib/postgresql/data
      - ./infra/postgres:/docker-entrypoint-initdb.d
  keycloak:
    image: keycloak/keycloak:18.0
    container_name: oauth
    networks:
      - mynetwork
    ports:
      - 8080:8080
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - DB_VENDOR=postgres
      - DB_ADDR=pg
      - DB_DATABASE=keycloak
      - DB_USER=pguser
      - DB_PASSWORD=password
    command: [ "start-dev" ]
    depends_on:
      - pg
  adminer:
    image: adminer
    depends_on:
      - pg
    restart: always
    ports:
      - 8001:8080
volumes:
  pg-data-01:
  mysql-data:
networks:
  mynetwork:
    driver: bridge